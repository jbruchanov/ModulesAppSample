apply plugin: 'com.android.library'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28



    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'

    implementation "com.google.dagger:dagger:${daggerLibraryVersion}"
    /*
looks like it's necessary if we have own HomeModule which needs Dagger factory
DaggerAppComponent.java:13: error: cannot find symbol
import com.example.home.HomeModule_ProvideSomeFactory;
^
symbol:   class HomeModule_ProvideSomeFactory
location: package com.example.home
*/
//    kapt "com.google.dagger:dagger-compiler:${daggerLibraryVersion}"
    api project(path: ':core-utils')
    api project(path: ':core-ui')
    api project(path: ':ui-home-settings')
}
